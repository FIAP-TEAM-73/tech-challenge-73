name: Deploy to OCI
on:
  push:
    branches:
      - RELEASE/0.0.1
      - main 
   
jobs:

  QA:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Do Código
        uses: actions/checkout@v3
      - name: Preparando Ambiente
        run: |
          sudo apt update -y
          sudo apt install nodejs -y
          sudo npm install
      - name: Fazendo testes
        run: npm run test

  Security:
    runs-on: ubuntu-20.04
    needs: QA
    container:
      image: semgrep/semgrep
    steps:
      - name: Checkout Do Código
        uses: actions/checkout@v3
      - name: Analise Estatica
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        run: semgrep ci



  Docker:
    needs: Security
    runs-on: ubuntu-latest
    steps:
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1
     - name: Export Enviroment
       run: |
         export POSTGRES_DB=${{secrets.POSTGRES_DB}}
         export POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}
         export POSTGRES_USER=${{secrets.POSTGRES_USER}}
     - name: Log in to Docker Hub
       uses: docker/login-action@v1
       with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
     - name: Build and push Docker image
       uses: docker/build-push-action@v2
       with:
        file: Dockerfile
        push: true
        tags: |
            giovannipajeu/tech-challenge-73-potential-pancake:latest 
            giovannipajeu/tech-challenge-73-potential-pancake:${{github.run_number}}     

  Deploy:
    needs: Docker
    runs-on: ubuntu-latest
    steps:
    - name: Install and configure kubectl
      run:
 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
  
    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{secrets.CLUSTER_NAME}}

    - name: Deploy to EKS
      run: |
           kubectl apply -f Kubernetes/.         
